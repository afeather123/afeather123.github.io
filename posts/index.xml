<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on AFKode</title>
    <link>http://afeather123.github.io/posts/</link>
    <description>Recent content in Posts on AFKode</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 12 Jun 2018 09:35:06 -0700</lastBuildDate>
    
	<atom:link href="http://afeather123.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Advice From a Novice Programmer to an Absolute Beginner</title>
      <link>http://afeather123.github.io/posts/advice-from-a-novice-programmer-to-an-absolute-beginner/</link>
      <pubDate>Tue, 12 Jun 2018 09:35:06 -0700</pubDate>
      
      <guid>http://afeather123.github.io/posts/advice-from-a-novice-programmer-to-an-absolute-beginner/</guid>
      <description>A few weeks ago, I attended a talk from a Google employee who gave advice about working in the software industry, sharing his perspective on how to get a job and continue advancing your career, what the most important skills are to foster, and lots of other valuable advice. The talk really got me thinking and I&amp;rsquo;m really glad that I went. One piece of wisdom that he shared was that even when you are just starting out, there is always someone lower on the totem pole then you; the person who is in the place that you just were, running into the problems you just learned how to solve.</description>
    </item>
    
    <item>
      <title>Creating Interactive Dialogue With Json Part 3: Choices</title>
      <link>http://afeather123.github.io/posts/creating-interactive-dialogue-w-json-part-three/</link>
      <pubDate>Mon, 04 Jun 2018 10:48:42 -0700</pubDate>
      
      <guid>http://afeather123.github.io/posts/creating-interactive-dialogue-w-json-part-three/</guid>
      <description>Now to the good stuff. Redirecting from one piece of dialogue to the next is the bread and butter of most stories in games, and at the end of the day much of what you write will end up will likely be linear in nature; however, what makes games unique in terms of story telling is the ability to add interactivity, to create an experience that changes based on user input.</description>
    </item>
    
    <item>
      <title>Creating Interactive Dialogue in Javascript with JSON Part 2: Redirects</title>
      <link>http://afeather123.github.io/posts/creating-interactive-dialogue-w-json-part-two/</link>
      <pubDate>Sun, 03 Jun 2018 11:59:26 -0700</pubDate>
      
      <guid>http://afeather123.github.io/posts/creating-interactive-dialogue-w-json-part-two/</guid>
      <description>In the last section, we got familiar with the problem and laid out what we&amp;rsquo;re trying to do; we talked about text nodes and how they store the dialogue, and either information about how to transition to the next node, or information about the choices to present the user with.
Now, let&amp;rsquo;s get into writing the code to work on that file. To start we are going to focus on writing the code that iterates over the file, and then we will create the GUI with buttons and text afterwards.</description>
    </item>
    
    <item>
      <title>Creating Interactive Dialogue in Javascript with JSON Part 1: The Problem</title>
      <link>http://afeather123.github.io/posts/creating-interactive-dialogue-w-json-intro/</link>
      <pubDate>Sat, 02 Jun 2018 20:41:13 -0700</pubDate>
      
      <guid>http://afeather123.github.io/posts/creating-interactive-dialogue-w-json-intro/</guid>
      <description>In this series I&amp;rsquo;m going to go over creating a Javascript program that iterates over JSON to tell an interactive story. Here&amp;rsquo;s an example:
 var Story;if (Story !== undefined) {console.log(&#34;Story is already defined&#34;);} else {import(&#39;/js/story.js&#39;).then(result = {Story = result.Story;MakeUIHandler();function MakeUIHandler() {const characterName = document.querySelector(&#39;#characterName1&#39;);const buttons = document.querySelector(&#39;#buttons1&#39;);const displayText = document.querySelector(&#39;#text1&#39;);console.log(&#39;\/json\/introToDialogue.json&#39;)fetch(&#39;\/json\/introToDialogue.json&#39;).</description>
    </item>
    
    <item>
      <title></title>
      <link>http://afeather123.github.io/posts/ternary-operators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://afeather123.github.io/posts/ternary-operators/</guid>
      <description>A ternary operator is an expression that exists in most programming languages that takes 3 arguments; they look like this:
conditional_statement ? true_result : false_result;
Example:
let burner_on = true let stove_temp = burner_on === true ? &amp;lsquo;The stove is hot&amp;rsquo; : &amp;lsquo;The stove is cool&amp;rsquo; console.log(stove_temp) // This will print out &amp;lsquo;The stove is hot&amp;rsquo;
Ternary operators have a conditional statement, a &amp;lsquo;true&amp;rsquo; result, and a &amp;lsquo;false&amp;rsquo; result. It then returns either the true or false result based on whether the condition resolves to true or false.</description>
    </item>
    
  </channel>
</rss>